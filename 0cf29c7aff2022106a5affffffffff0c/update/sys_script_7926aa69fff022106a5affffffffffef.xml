<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_bloodbanker_request</collection>
        <condition>current.status.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Inventory Sync Collection or Fullfill</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

  var bloodType = current.bloodt_type;
  var branch = current.branch;
  var quantity = parseInt(current.quantity || 0);

  if (!bloodType || !branch || quantity <= 0) {
    gs.warn('Inventory sync skipped: Missing blood type, branch, or quantity for request: ' + current.number);
    return;
  }

  var invGR = new GlideRecord('sn_bloodbanker_inventory');
  invGR.addQuery('branch', branch);
  invGR.addQuery('bloodt_type', bloodType);
  invGR.query();

  var inventoryExists = invGR.next();

  // Add on collection
  if (current.status == 'collected' && previous.status != 'collected') {
    if (inventoryExists) {
      invGR.units_available = parseInt(invGR.units_available || 0) + quantity;
      invGR.update();
    } else {
      invGR.initialize();
      invGR.branch = branch;
      invGR.bloodt_type = bloodType;
      invGR.units_available = quantity;
      invGR.insert();
    }
  }

// reduce on fullfullied
  if (current.status == 'fulfilled' && previous.status != 'fulfilled') {
    if (inventoryExists) {
      invGR.units_available = Math.max(0, parseInt(invGR.units_available || 0) - quantity);
      invGR.update();
    } else {
      gs.warn('No inventory to fulfill request ' + current.number + ' at branch ' + branch);
    }
  }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-09 07:38:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7926aa69fff022106a5affffffffffef</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Inventory Sync Collection or Fullfill</sys_name>
        <sys_overrides/>
        <sys_package display_value="BloodBanker" source="sn_bloodbanker">0cf29c7aff2022106a5affffffffff0c</sys_package>
        <sys_policy/>
        <sys_scope display_value="BloodBanker">0cf29c7aff2022106a5affffffffff0c</sys_scope>
        <sys_update_name>sys_script_7926aa69fff022106a5affffffffffef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-09 09:51:20</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7926aa69fff022106a5affffffffffef"/>
</record_update>
