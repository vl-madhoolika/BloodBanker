<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_bloodbanker_request</collection>
        <condition>current.status != previous.status</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Status Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
  
  var userID = gs.getUserID();

  // Get associated app user record
  var userGR = new GlideRecord('sn_bloodbanker_user');
  userGR.addQuery('user_id', userID);
  userGR.query();

  var isRequester = false;
  var isBranchManager = gs.hasRole('sn_bloodbanker.branchmanager');
  var isAdmin = gs.hasRole('sn_bloodbanker.admin');

  if (userGR.next()) {
    if (current.user == userGR.getUniqueValue()) {
      isRequester = true;
    }
  }

  var newStatus = current.status + '';
  var oldStatus = previous.status + '';

  // If requester, they can only withdraw from pending
  if (isRequester && oldStatus == 'pending' && newStatus != 'withdraw') {
    gs.addErrorMessage('You can only withdraw a pending request.');
    current.setAbortAction(true);
  }

  // If not branch manager or admin and trying to change to approve/reject
  if (!isBranchManager && !isAdmin && (newStatus == 'approved' || newStatus == 'rejected')) {
    gs.addErrorMessage('Only branch managers can approve or reject requests.');
    current.setAbortAction(true);
  }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-08 18:17:02</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>548f2795ff3026106a5affffffffff5a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Validate Status Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="BloodBanker" source="sn_bloodbanker">0cf29c7aff2022106a5affffffffff0c</sys_package>
        <sys_policy/>
        <sys_scope display_value="BloodBanker">0cf29c7aff2022106a5affffffffff0c</sys_scope>
        <sys_update_name>sys_script_548f2795ff3026106a5affffffffff5a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-08 19:00:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=548f2795ff3026106a5affffffffff5a"/>
</record_update>
